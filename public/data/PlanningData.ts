import { PlanningEvent, PlanningEventType, PlanningEventStatus } from '@/types/planning';
// R√©utilisation des donn√©es d'Absence (anciennement 'Conge')
// NOTE : J'ai renomm√© 'Conge' en 'Absence' pour correspondre √† votre Enum.
// Vous devrez vous assurer que ce fichier 'AbsenceData' existe et exporte bien des donn√©es.
import { parseISO, addHours } from 'date-fns'; // Pour aider √† la conversion (m√™me si peu utilis√© ici)
import initialAbsencesData from './initialAbsencesData';
// Assurez-vous que le chemin est correct

// --- Helper pour mapper le statut ---
const mapStatus = (oldStatus: string): PlanningEventStatus => {
  switch (oldStatus) {
    case 'Approuv√©':
    case 'Confirm√©':
      return PlanningEventStatus.CONFRIME; // 'Confirm√©e'
    case 'En attente':
      return PlanningEventStatus.EN_ATTENTE; // 'En attente'
    case 'Annul√©':
    case 'Annul√©e':
      return PlanningEventStatus.ANNULEE; // 'Annul√©e'
    default:
      return PlanningEventStatus.EN_ATTENTE; // Statut par d√©faut si inconnu
  }
};

// --- 1. Conversion des Anciens Cong√©s/Absences ---
// J'ai pris le pari que vos anciennes donn√©es de 'Conge' sont maintenant vos donn√©es d'Absence.
// J'ai remplac√© les champs obsol√®tes (nomEmploye, location, employeId) par les nouveaux requis.
const AbsencesAsPlanningEvents: PlanningEvent[] = initialAbsencesData.map((absence: { id: any; employeId: any; typeAbsence: any; dureeJoursOuvres: any; raison: any; dateDebut: any; dateFin: any; statut: string; }) => ({
  // NOTE: On suppose que l'ID est bien un 'number' dans les donn√©es d'Absence
  id: absence.id,
  personnel_id: absence.employeId, // On mappe l'ancien employeId au nouveau personnel_id
  type: PlanningEventType.ABSENCE, // 'Absence'
  titre: `${absence.typeAbsence} (${absence.dureeJoursOuvres}j)`,
  description: absence.raison,
  dateDebut: absence.dateDebut,
  dateFin: absence.dateFin,
  status: mapStatus(absence.statut),
  // Ces IDs sont ajout√©s par d√©faut car ils sont obligatoires dans la nouvelle interface
  responsable_id: 99, // ID du responsable par d√©faut (√† ajuster si possible)
  etablissement_id: 1, // ID de l'√©tablissement par d√©faut (√† ajuster si possible)
}));

// --- 2. Les autres √©v√©nements de planning ---
const initialPlanningData: PlanningEvent[] = [
  ...AbsencesAsPlanningEvents, // On inclut toutes les Absences
  
  // √âv√©nement 1 : Formation
  {
    id: 1001, // Changement en number
    personnel_id: 1, // 'emp_001' devient 1
    type: PlanningEventType.FORMATION, // 'Formation'
    titre: 'Formation TypeScript Avanc√© üöÄ',
    description: 'Formation intensive sur les concepts avanc√©s pour devenir un ninja de TypeScript.',
    dateDebut: '2025-09-01',
    dateFin: '2025-09-03',
    status: PlanningEventStatus.CONFRIME, // 'Confirm√©e'
    responsable_id: 5, // ID du responsable
    etablissement_id: 1,
    // Note : Le lieu ('Salle de Conf√©rence B') pourrait aller dans la description ou un champ 'location' optionnel si on l'ajoute.
  },
  
  // √âv√©nement 2 : Mission
  {
    id: 1002, // Changement en number
    personnel_id: 2, // 'emp_002' devient 2
    type: PlanningEventType.MISSION, // 'Mission'
    titre: 'Mission Client Alpha √† Lyon üíº',
    description: 'D√©ploiement et support crucial sur site chez le client Alpha √† Lyon, France.',
    dateDebut: '2025-08-20',
    dateFin: '2025-08-25',
    status: PlanningEventStatus.CONFRIME, // 'Confirm√©e'
    responsable_id: 8,
    etablissement_id: 2,
  },
  
  // √âv√©nement 3 : R√©union
  {
    id: 1003, // Changement en number
    personnel_id: 1, // 'emp_001' devient 1
    type: PlanningEventType.REUNION, // 'R√©union'
    titre: 'R√©union d\'√©quipe Projet X (Hebdo)',
    description: 'Point d\'avancement hebdomadaire. Pr√©parez vos 5 minutes ! ‚òï',
    dateDebut: '2025-07-25',
    dateFin: '2025-07-25',
    status: PlanningEventStatus.CONFRIME, // 'Confirm√©e'
    responsable_id: 5,
    etablissement_id: 1,
  },
  
  // √âv√©nement 4 : T√¢che
  {
    id: 1004, // Changement en number
    personnel_id: 3, // 'emp_003' devient 3
    type: PlanningEventType.TACHE, // 'T√¢che'
    titre: 'Revue de code Module RH üßê',
    description: 'Revue et validation du code du nouveau module RH. Priorit√© haute.',
    dateDebut: '2025-07-23',
    dateFin: '2025-07-24',
    status: PlanningEventStatus.EN_ATTENTE, // 'En attente'
    responsable_id: 5,
    etablissement_id: 1,
  },
  
  // √âv√©nement 5 : R√©union avec heure (on garde le format ISO pour les heures)
  {
    id: 1005, // Changement en number
    personnel_id: 1, // 'emp_001' devient 1
    type: PlanningEventType.REUNION, // 'R√©union'
    titre: 'Kick-off Sprint ! üéâ',
    description: 'Lancement du nouveau sprint de d√©veloppement. Soyez √† l\'heure !',
    dateDebut: '2025-07-22T09:00:00',
    dateFin: '2025-07-22T10:00:00',
    status: PlanningEventStatus.CONFRIME, // 'Confirm√©e'
    responsable_id: 5,
    etablissement_id: 1,
  },
  
  // √âv√©nement 6 : T√¢che avec heure
  {
    id: 1006, // Changement en number
    personnel_id: 2, // 'emp_002' devient 2
    type: PlanningEventType.TACHE, // 'T√¢che'
    titre: 'Pr√©paration Rapport Mensuel de Juillet üìä',
    description: 'Compilation finale des donn√©es pour le rapport de juillet.',
    dateDebut: '2025-07-21T14:00:00',
    dateFin: '2025-07-21T17:00:00',
    status: PlanningEventStatus.EN_ATTENTE, // 'En attente'
    responsable_id: 8,
    etablissement_id: 2,
  },
];

export default initialPlanningData;